/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-09-11 09:00:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.hboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class modifyBoard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/lecture/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/MiniProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1724746570328L));
    _jspx_dependants.put("jar:file:/D:/lecture/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/MiniProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script> \r\n");
      out.write(" <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("   <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<title>게시글 수정</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(function(){\r\n");
      out.write("\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	function removeFileCheckBx(fileId){\r\n");
      out.write("		//체크박스를 클릭할 때 호출되는 함수\r\n");
      out.write("		console.log(fileId);\r\n");
      out.write("		let chkCount = countCheckBoxChecked();\r\n");
      out.write("		if(chkCount > 0){\r\n");
      out.write("			$(\".removeUpFileBtn\").removeAttr(\"disabled\");//disabled라는 속성을 제거해줌\r\n");
      out.write("			$(\".removeUpFileBtn\").val(chkCount + \"개 파일을 삭제합니다\");\r\n");
      out.write("		}else if(chkCount == 0){\r\n");
      out.write("			$(\".removeUpFileBtn\").attr('disabled', true);\r\n");
      out.write("			$(\".removeUpFileBtn\").val(\"선택된 파일이 없습니다\");\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function countCheckBoxChecked() {\r\n");
      out.write("		//체크된 체크박스 갯수\r\n");
      out.write("		let result = 0;\r\n");
      out.write("		$(\".fileCheck\").each(function(i,item) {\r\n");
      out.write("			console.log($(item).is(\":checked\")); //true\r\n");
      out.write("			if($(item).is(\":checked\")){\r\n");
      out.write("				result++;\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		console.log(result+\"개가 체크됨\");//클릭할 때마다 다시 함수가 실행됨\r\n");
      out.write("		return result;\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function removeFile() {\r\n");
      out.write("		//비활성화해놓은 [선택된파일삭제] 버튼 클릭시 호출\r\n");
      out.write("		let removeFileArr =[];\r\n");
      out.write("		alert(\"remove\");\r\n");
      out.write("		$(\".fileCheck\").each(function (i,item) {\r\n");
      out.write("			if($(item).is(\":checked\")){//파일 삭제하고 체크박스를 체크했다면\r\n");
      out.write("				let tmp = $(item).attr('id'); //선택된 파일의 id값을 얻어옴(pk)\r\n");
      out.write("				removeFileArr.push(tmp); //배열에 저장\r\n");
      out.write("				\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		console.log(\"삭제할 파일:\"+ removeFileArr);\r\n");
      out.write("		\r\n");
      out.write("		$.each(removeFileArr, function(i,item){\r\n");
      out.write("			\r\n");
      out.write("			 $.ajax({\r\n");
      out.write("		          url: \"/hboard/modifyRemoveFileCheck\",\r\n");
      out.write("		          type: \"POST\",\r\n");
      out.write("		          dataType: \"json\",\r\n");
      out.write("		          data: {//보내는 데이터\r\n");
      out.write("		        	  \"removeFileNo\" : item\r\n");
      out.write("		          },\r\n");
      out.write("		          async:false,//동기통신방식\r\n");
      out.write("		          success: function (data) {\r\n");
      out.write("		            console.log(data);\r\n");
      out.write("		            if(data.msg == 'success'){\r\n");
      out.write("		            	$('#'+item).parent().css('opacity',0.2)\r\n");
      out.write("		            }\r\n");
      out.write("		          },\r\n");
      out.write("		          error: function () {},\r\n");
      out.write("		          complete: function () {},\r\n");
      out.write("		        });\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("		\r\n");
      out.write("	function cancelRemFiles(){\r\n");
      out.write("		//파일삭제 취소버튼 클릭시 호출\r\n");
      out.write("		alert(\"호출\");\r\n");
      out.write("		 $.ajax({\r\n");
      out.write("	          url: \"/hboard/cancelRemFiles\",\r\n");
      out.write("	          type: \"POST\",\r\n");
      out.write("	          dataType: \"json\",\r\n");
      out.write("	          async:false,//동기통신방식\r\n");
      out.write("	          success: function (data) {\r\n");
      out.write("	            console.log(data);\r\n");
      out.write("	            if(data.msg == 'success'){\r\n");
      out.write("	            	$(\".fileCheck\").each(function(i, item) {\r\n");
      out.write("					$(item).prop(\"checked\",false); //체크박스가 체크되지 않은 상태로 바꿈	            		\r\n");
      out.write("	            	$(item).parent().parent().css('opacity',1);\r\n");
      out.write("					});\r\n");
      out.write("	            	$(\".removeUpFileBtn\").attr('disabled',true); //선택파일 삭제버튼 비활성화\r\n");
      out.write("	            	$(\".removeUpFileBtn\").val(\"선택된 파일이 없습니다\");\r\n");
      out.write("	            }\r\n");
      out.write("	          },\r\n");
      out.write("	          error: function () {},\r\n");
      out.write("	          complete: function () {},\r\n");
      out.write("	        });\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	//파일 추가\r\n");
      out.write("	function addRows(obj){\r\n");
      out.write("		let rowCnt=$('.fileListTable tr').length;\r\n");
      out.write("		console.log(\"tr갯수:\"+rowCnt);\r\n");
      out.write("		let row = $(obj).parent().parent();\r\n");
      out.write("		let inputFileTag = `<tr><td colspan='2'>\r\n");
      out.write("		<input type='file' class='form-control' id='newFile_${rowCnt}' name='modifyNewFile' onchange='showPreview(this);'></td>\r\n");
      out.write("		<td><input type='button' class='btn btn-danger' value='파일 저장 취소' onclick='cancelAddFile(this);'</td></tr>`;\r\n");
      out.write("		$(inputFileTag).insertBefore(row);\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function showPreview(obj){\r\n");
      out.write("		console.log(obj.files);\r\n");
      out.write("		if(obj.files[0].size > 1024*1024*10){\r\n");
      out.write("			alert(\"10mb이하의 파일만 업로드할 수 있습니다\");\r\n");
      out.write("			obj.value=\"\";\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		//파일 타입 확인\r\n");
      out.write("		let imageType=[\"image/jpeg\",\"image/jpg\",\"image/png\",\"image/gif\"];\r\n");
      out.write("		let fileType = obj.files[0].type;\r\n");
      out.write("		let fileName = obj.files[0].name;\r\n");
      out.write("		console.log(fileType);\r\n");
      out.write("		\r\n");
      out.write("		if(imageType.indexOf(fileType) != -1 ){// 이미지 파일이라면\r\n");
      out.write("			let reader = new FileReader(); //FileReader객체 생성\r\n");
      out.write("			reader.readAsDataURL(obj.files[0]); //업로드된 파일을 읽어온다\r\n");
      out.write("			reader.onload = function(e){\r\n");
      out.write("				//reader객체에 의해 파일을 읽기 완료하면 실행되는 콜백함수\r\n");
      out.write("				console.log(e.target);\r\n");
      out.write("				let imgTag = `<div style='padding: 6px;'><img src='${e.target.result}' width='50px' /><span>${fileName}</span></div>`;\r\n");
      out.write("				$(imgTag).insertAfter(obj);\r\n");
      out.write("			}\r\n");
      out.write("		}else{//이미지 파일이 아니라면\r\n");
      out.write("			let imgTag=`<div style='padding: 6px;'><img src='/resources/images/noImg.jpg' width='50px' /><span>${fileName}</span></div>`;\r\n");
      out.write("				$(imgTag).insertAfter(obj);\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function cancelAddFile(obj) {\r\n");
      out.write("		let fileTag = $(obj).parent().prev().children().eq(0); // input type=file태그\r\n");
      out.write("		$(fileTag).val('');//뒤에서 날리니까 필요없긴 함\r\n");
      out.write("		$(fileTag).parent().parent().remove();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	.fileBtns{\r\n");
      out.write("		display: flex;\r\n");
      out.write("		justify-content: flex-end;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./../header.jsp", out, false);
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<h1>게시글 수정</h1>\r\n");
      out.write("		");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<!-- The Modal -->\r\n");
      out.write("<div class=\"modal\" id=\"myModal\">\r\n");
      out.write("  <div class=\"modal-dialog\">\r\n");
      out.write("    <div class=\"modal-content\">\r\n");
      out.write("\r\n");
      out.write("      <!-- Modal Header -->\r\n");
      out.write("      <div class=\"modal-header\">\r\n");
      out.write("        <h4 class=\"modal-title\">Modal Heading</h4>\r\n");
      out.write("        <button type=\"button\" class=\"btn-close modalCloseBtn\" data-bs-dismiss=\"modal\"></button>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <!-- Modal body -->\r\n");
      out.write("      <div class=\"modal-body\">\r\n");
      out.write("        Modal body..\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <!-- Modal footer -->\r\n");
      out.write("      <div class=\"modal-footer\">\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\" onclick=\"location.href='/hboard/removeBoard?boardNo=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.boardNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\">삭제</button>\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">취소</button>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./../footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/hboard/modifyBoard.jsp(167,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("boardDetailInfo");
      // /WEB-INF/views/hboard/modifyBoard.jsp(167,2) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/hboard/modifyBoard.jsp(167,2) '${boardDetailInfo}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${boardDetailInfo}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("			<form action=\"/hboard/modifyBoardSave\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
            out.write("				<div class=\"input-group mb-3\">\r\n");
            out.write("	  				<span class=\"input-group-text\">글 번호</span>\r\n");
            out.write("	  				<input type=\"text\" class=\"form-control\" id=\"boardNo\" name=\"boardNo\" value='");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardDetailInfo.boardNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("'  readonly />\r\n");
            out.write("				</div>\r\n");
            out.write("				<div class=\"input-group mb-3\">\r\n");
            out.write("	  				<span class=\"input-group-text\">글 제목</span>\r\n");
            out.write("	  				<input type=\"text\" class=\"form-control\" name=\"title\" id=\"title\" value='");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardDetailInfo.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("'/>\r\n");
            out.write("				</div>\r\n");
            out.write("				<div class=\"input-group mb-3\">\r\n");
            out.write("	  				<span class=\"input-group-text\">작성자(이메일)</span>\r\n");
            out.write("	  				<input type=\"text\" class=\"form-control\" name=\"writer\" value='");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardDetailInfo.writer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('(');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardDetailInfo.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(")' readonly/>\r\n");
            out.write("				</div>\r\n");
            out.write("				<div class=\"input-group mb-3\">\r\n");
            out.write("	  				<span class=\"input-group-text\">작성일</span>\r\n");
            out.write("	  				<input type=\"text\" class=\"form-control\" name=\"postDate\" value='");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardDetailInfo.postDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("' readonly/>\r\n");
            out.write("				</div>\r\n");
            out.write("				<div class=\"input-group mb-3\">\r\n");
            out.write("	  				<span class=\"input-group-text\">조회수</span>\r\n");
            out.write("	  				<input type=\"text\" class=\"form-control\" name=\"readCount\" value='");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardDetailInfo.readCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("' readonly/>\r\n");
            out.write("				</div>\r\n");
            out.write("				\r\n");
            out.write("				<div class=\"mb-3\">\r\n");
            out.write("				<label for=\"comment\">내용:</label>\r\n");
            out.write("				<textarea class=\"form-control\" rows=\"5\" id=\"content\" name=\"content\" >");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardDetailInfo.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</textarea>\r\n");
            out.write("				</div>\r\n");
            out.write("		\r\n");
            out.write("				\r\n");
            out.write("	\r\n");
            out.write("				\r\n");
            out.write("				<div class =\"preview fileListTable \">\r\n");
            out.write("				 <table class=\"table table-hover\">\r\n");
            out.write("				 <thead>\r\n");
            out.write("				 <tr>\r\n");
            out.write("					 <th>#</th>\r\n");
            out.write("					 <th>uploadedFiles</th>\r\n");
            out.write("					 <th>fileName</th>\r\n");
            out.write("				 </tr>\r\n");
            out.write("				 </thead>\r\n");
            out.write("				 <tbody>\r\n");
            out.write("				 	");
            if (_jspx_meth_c_005fforEach_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("				 	<tr>\r\n");
            out.write("				 		<td colspan=\"3\" style=\"text-align:center;\">\r\n");
            out.write("				 			<img alt=\"\" src=\"/resources/images/addicon.png\" onclick=\"addRows(this)\"/>\r\n");
            out.write("				 			</td>\r\n");
            out.write("				 	</tr>\r\n");
            out.write("				 	\r\n");
            out.write("				 </tbody>\r\n");
            out.write("				 </table>\r\n");
            out.write("				 <div><input type= /></div>\r\n");
            out.write("				 <div class=\"fileBtns\">\r\n");
            out.write("				 	<input type=\"button\" class=\"btn btn-primary removeUpFileBtn\" disabled value=\"선택한 파일 삭제\" onclick=\"removeFile();\" />\r\n");
            out.write("				 	<input type=\"button\" class=\"btn btn-danger cancelRemove\" value=\"파일 삭제 취소\" onclick=\"cancelRemFiles();\" />\r\n");
            out.write("<!-- 				 	<input type=\"button\" class=\"btn btn-danger cancelRemove\" disabled value=\"파일 삭제 취소\" onclick=\"removeFile();\" /> -->\r\n");
            out.write("				 </div>\r\n");
            out.write("			\r\n");
            out.write("				</div>\r\n");
            out.write("				<button type=\"submit\" class=\"btn btn-info\">저장</button>\r\n");
            out.write("				<button type=\"button\" class=\"btn btn-warning\" onclick=\"location.href='hboard/viewBoard/boardNo=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardDetailInfo.boardNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("'\">취소</button>\r\n");
            out.write("			\r\n");
            out.write("			</form>\r\n");
            out.write("		");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/hboard/modifyBoard.jsp(208,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("file");
      // /WEB-INF/views/hboard/modifyBoard.jsp(208,6) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/hboard/modifyBoard.jsp(208,6) '${boardDetailInfo.fileList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${boardDetailInfo.fileList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("				 		");
            if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("\r\n");
            out.write("				 	");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /WEB-INF/views/hboard/modifyBoard.jsp(209,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.boardUpFileNo != '0' }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				 			<tr>\r\n");
          out.write("				 				<td>\r\n");
          out.write("				 				    <input type=\"checkbox\" class=\"form-check-input fileCheck\" id=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.boardUpFileNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("				 				    onclick=\"removeFileCheckBx(this.id);\">\r\n");
          out.write("				 				</td>\r\n");
          out.write("				 				<td>\r\n");
          out.write("				 					");
          if (_jspx_meth_c_005fchoose_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\r\n");
          out.write("				 				</td>\r\n");
          out.write("				 				<td>\r\n");
          out.write("				 				");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.originFileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\r\n");
          out.write("				 				</td>\r\n");
          out.write("				 			</tr>\r\n");
          out.write("				 		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				 						");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\r\n");
          out.write("				 						");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\r\n");
          out.write("				 					");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/hboard/modifyBoard.jsp(217,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.thumbFileName  != null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				 							<img alt=\"\" src=\"/resources/boardUpFiles");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.thumbFileName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" />\r\n");
          out.write("				 						");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/hboard/modifyBoard.jsp(220,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.thumbFileName  == null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				 								<a href='/resources/boardUpFiles");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.originFileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("'>\r\n");
          out.write("												<img src ='/resources/images/noImg.jpg' width=\"80px\"/>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.newFileName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</a>\r\n");
          out.write("				 						");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }
}
