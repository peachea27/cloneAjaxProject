<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
<!-- 	수신된 MultiPart의 데이터를 순서대로 재조립, 파일업로드 제한 : 10MB -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>
	
<!-- 	인터셉터 설정 : 필요한 인터셉터 객체를 만들고 관리 -->
<beans:bean id="exampleInterceptor" class="com.miniproject.interceptor.InterCeptorExample">
</beans:bean>
<beans:bean id="interceptor1" class="com.miniproject.interceptor.Interceptor1">
</beans:bean>
<beans:bean id="interceptor2" class="com.miniproject.interceptor.Interceptor2">
</beans:bean>
<beans:bean id="loginInterceptor" class="com.miniproject.interceptor.LoginInterceptor">
</beans:bean>
<beans:bean id="authInterceptor" class="com.miniproject.interceptor.AuthInterceptor">
</beans:bean>

<!-- 인터셉터가 동작하는 매핑 주소 설정 -->
<interceptors>
	<interceptor>
		<mapping path="/exampleInterceptor"/>
		<beans:ref bean ="exampleInterceptor"/>
	</interceptor>
	
	<interceptor>
		<mapping path="/example"/>
		<beans:ref bean="interceptor1"/>
	</interceptor>
	<interceptor>
		<mapping path="/example"/>
		<beans:ref bean="interceptor2"/>
	</interceptor>
	<interceptor>
		<mapping path="/member/login"/>
		<beans:ref bean="loginInterceptor"/>
	</interceptor>
	<interceptor>
		<mapping path="/hboard/saveBoard"/> <!-- 글작성 (계층형 게시판) -->
		<mapping path="/hboard/modifyBoard"/> <!-- 글수정 (계층형 게시판) -->
		<mapping path="/hboard/removeBoard"/> <!-- 글삭제 (계층형 게시판) -->
		<mapping path="/hboard/showReplyForm"/> <!-- 답글 (계층형 게시판) -->
		<mapping path="/cboard/showSaveBoardForm"/> <!-- 글작성 (댓글형 게시판) -->
		<mapping path="/cboard/modifyBoard"/> <!-- 글수정 (댓글형 게시판) -->
		
		<beans:ref bean="authInterceptor"/>
	</interceptor>
	
</interceptors>

	<context:component-scan base-package="com.miniproject.controller" />
	<context:component-scan base-package="com.miniproject.comment" />
</beans:beans>

